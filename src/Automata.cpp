#include "Automata.h"

// Конструктор класса Automata инициализирует автомат с нулевой суммой на счету, выключенным состоянием, неопределенным индексом выбора и предустановленным меню
Automata::Automata() : cash(0.0), state(STATES::OFF), choiceIndex(-1) {
    // Предустановленное меню и цены
    menu = { "Coffee", "Tea", "Syrup", "Sugar", "Milk"};
    prices = { 5.0, 3.0, 0.5, 0.5, 0.5 };
}

// Включение автомата
void Automata::on() {
    state = STATES::ON; // Переключаем состояние на включенное
}

// Выключение автомата
void Automata::off() {
    state = STATES::OFF; // Переключаем состояние на выключенное
}

// Добавление средств на счет
void Automata::coin(double amount) {
    cash += amount; // Добавляем сумму к текущему балансу
}

// Выбор напитка пользователем
void Automata::choice(int index) {
    if (state == STATES::ON && index >= 0 && index < menu.size()) { // Проверяем, что автомат включен и выбрано действительное значение
        choiceIndex = index; // Сохраняем выбранный индекс
        if (cash >= prices[index]) { // Проверяем, достаточно ли средств
            state = STATES::COOKING; // Переключаем состояние на приготовление
            std::cout << "Выбран напиток: " << menu[index] << std::endl; // Выводим сообщение об успешном выборе
        }
        else {
            std::cout << "Недостаточно средств." << std::endl; // Выводим сообщение об ошибке
        }
    }
}

// Проверка наличия необходимой суммы для покупки напитка
void Automata::check() const {
    if (cash >= prices[choiceIndex]) { // Проверяем, достаточно ли средств
        std::cout << "Достаточно средств." << std::endl; // Выводим сообщение об успехе
    }
    else {
        std::cout << "Недостаточно средств." << std::endl; // Выводим сообщение об ошибке
    }
}

// Отмена сеанса обслуживания
void Automata::cancel() {
    state = STATES::OFF; // Переключаем состояние на выключенное
}

// Имитация процесса приготовления напитка
void Automata::cook() {
    if (state == STATES::COOKING) { // Проверяем, что автомат готовит напиток
        std::cout << "Напиток готов." << std::endl; // Выводим сообщение о готовности напитка
        state = STATES::FINISHED; // Переключаем состояние на завершенное
    }
}

// Завершение обслуживания пользователя
void Automata::finish() {
    state = STATES::OFF; // Переключаем состояние на выключенное
}
